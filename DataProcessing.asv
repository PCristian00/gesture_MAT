clearvars;

if (isfile("samples.mat"))
    load("samples.mat")
else
    disp("File non trovato.")
    return
end

while true
            user = input("Inserire utente (1-4):");
            if user < 1 || user > 4
                disp("Indice non trovato.")
            else
                break;
            end
end

n = save_index(user);

while true
fprintf("Ci sono %d acquisizioni per l'utente %d.\n" + ...
    "Inserire un numero da 1 a %d:\n",n,user,n);
scelta_a=input("");
if(scelta_a<n || scelta_a>0)
    break
else, disp("Indice non trovato");
end
end

while true
        scelta_s = input("Scegliere sensori da mostrare:\n"+ ...
            "1 - Accelerometro\n"+ ...
            "2 - Magnetometro\n"+ ...
            "3 - Orientazione\n"+ ...
            "4 - Velocità angolare\n"+ ...
            "5 - Tutti\n");
        switch (scelta_s)
            case 1
                a=samples.user(user).acquisition(scelta_s).acc;
                plot(a);
                legend('X', 'Y', 'Z');
                xlabel('Campioni');
                ylabel('Accelerazione (m/s^2)');   
                x = a(:, 1);
                y = a(:, 2);
                z = a(:, 3);
                 = sqrt(sum(x.^2+y.^2+z.^2, 2));
                break
            case 2
                mag=samples.user(user).acquisition(scelta_s).mag;
                plot(mag);
                legend('X', 'Y', 'Z');
                xlabel('Campioni');
                ylabel('Accelerazione (m/s^2)');   
                x = mag(:, 1);
                y = mag(:, 2);
                z = mag(:, 3);
                mag = sqrt(sum(x.^2+y.^2+z.^2, 2));
                break
            case 3
                m.AccelerationSensorEnabled = 0;
                m.MagneticSensorEnabled = 0;
                m.OrientationSensorEnabled = 1;
                m.AngularVelocitySensorEnabled = 0;
                disp("Sensore orientazione acceso.");
                break
            case 4
                m.AccelerationSensorEnabled = 0;
                m.MagneticSensorEnabled = 0;
                m.OrientationSensorEnabled = 0;
                m.AngularVelocitySensorEnabled = 1;
                disp("Sensore velocità angolare acceso.");
                break
            case 5
                m.AccelerationSensorEnabled = 1;
                m.MagneticSensorEnabled = 1;
                m.OrientationSensorEnabled = 1;
                m.AngularVelocitySensorEnabled = 1;
                disp("Tutti i sensori accesi.");
                break
            otherwise, disp("Indice non trovato.");
        end
end


% plot(a);
% legend('X', 'Y', 'Z');
% xlabel('Campioni');
% ylabel('Accelerazione (m/s^2)');
% 
% %% Pre-processing
% % Compute magnitude
% 
% x = a(:, 1);
% y = a(:, 2);
% z = a(:, 3);
% mag = sqrt(sum(x.^2+y.^2+z.^2, 2));

% figure; plot(mag);
% xlabel('Samples');
% ylabel('Acceleration (m/s^2)'); % it is not zero-mean ->
%
% % -> remove offset from the magnitude (due to gravity)
% magNoG = mag - mean(mag);

% plot(magNoG);
% xlabel('Time (s)');
% ylabel('Acceleration (m/s^2)');